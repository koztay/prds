### OSX ###
.DS_Store
.AppleDouble
.LSOverride

### SublimeText ###
# cache files for sublime text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# workspace files are user-specific
*.sublime-workspace

# project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using SublimeText
# *.sublime-project

# sftp configuration file
sftp-config.json

# Basics
*.py[cod]
__pycache__

# Logs
logs
*.log
pip-log.txt
npm-debug.log*

# Unit test / coverage reports
.coverage
.tox
nosetests.xml
htmlcov

# Translations
*.mo
*.pot

# Pycharm
.idea/

# Provided default Pycharm Run/Debug Configurations should be tracked by git
# In case of local modifications made by Pycharm, use update-index command
# for each changed file, like this:
# git update-index --assume-unchanged .idea/karnascookiecutter.iml
!.idea/runConfigurations/
!.idea/karnascookiecutter.iml
!.idea/vcs.xml
!.idea/webResources.xml


# Vim

*~
*.swp
*.swo

# npm
node_modules/

# Compass
.sass-cache

# virtual environments bunu silmezsen deploy çalışmıyor.
#.env

# User-uploaded media
# static_in_env/ bunu da gitignore 'a koyunca klasörler kopyalanmadığı için volume owner root olmuş oluyor.
# excluded yapmanda docker-compose 'u lokalden çalıştırırken bir sakınca yok. Çünkü COPY . komutu gitignore
# içerisinde olup olmadığına bakmaksızın bunları remote'a kopyalıyor. kopyalandıktan sonra da volume olarak
# çalıştırıldığında sorun olmuyor. Ancak deploy komutu ile çalılırken bu gitignore 'da ise o zaman bu klasörler
# yaratılmadığı için volume tarafından yaratılana da yazamıyorlar. Çünkü user olarak root değil django kullanıyoruz.

templating_files/
coming-soon-dark-night/

imajlar/
logolar/
.env
# .env dosyasını ignore edince çalışmıyor

#core-os / cloud config
core-os-cloud-config.yml
create_coreos_droplet.sh
